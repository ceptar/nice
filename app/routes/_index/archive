import { LoaderFunctionArgs, data } from '@remix-run/node';
import { useLoaderData, useRouteLoaderData } from '@remix-run/react';
import { useRootLoader } from '~/src/vendure/utils/use-root-loader';
import { getCollectionProducts } from '~/src/vendure/providers/products/collectionProducts';

import type { MetaFunction } from '@remix-run/react';
import { CategoryLink } from '~/src/components/category-link/category-link';
import { FeaturedProductsSection } from '~/src/components/featured-products-section/featured-products-section';
import { LabelWithArrow } from '~/src/components/label-with-arrow/label-with-arrow';
import { BackgroundParallax, FadeIn, FloatIn } from '~/src/components/visual-effects';
import { Button } from '~/src/components/ui/button';
import {
    Carousel,
    CarouselContent,
    CarouselItem,
    CarouselNext,
    CarouselPrevious,
} from '~/src/components/ui/carousel';
import { ProductLink } from '~/src/components/product-link/product-link';
import { ProductCard } from '~/src/components/product-card/product-card';
import { Price } from '~/src/components/products/Price';
import { search } from '~/src/vendure/providers/products/products';

export async function loader({ request }: LoaderFunctionArgs) {
    // const { featuredCollections } = useRootLoader();
    // if (!featuredCollections?.length) {
    //     throw new Response('No featured collections found', { status: 404 });
    // }
    // const featuredCollectionsWithProducts = await Promise.all(
    //     featuredCollections.map(async (collection) => {
    //         const productsData = await getCollectionProducts(collection.slug, 0, 10); // adjust take if needed

    //         return {
    //             collection,
    //             products: productsData.search.items,
    //         };
    //     }),
    // );
    // const featuredCollectionEins = collections.find(
    //     (c) => c.customFields?.featureNr === 1
    //   );
    //   const featuredSlugEins = featuredCollectionEins?.slug ?? null;

    const collectionProducts = await getCollectionProducts('sc2-featured-items', 0, 100);
    const collectionProductsZwo = await getCollectionProducts('sc1-new-in', 0, 100);
    console.log('collectionProducts', collectionProducts);

    return { collectionProducts, collectionProductsZwo };
}

export default function HomePage() {
    const RootLoaderData = useRootLoader();
    const featuredProductsData = RootLoaderData.featuredProductsData;
    console.log('featuredProductsData', featuredProductsData);
    // const featuredCollectionsAll = RootLoaderData.collections
    //     .filter((c) => c.customFields?.featuredCollection === true)
    //     .sort((a, b) => (a.customFields?.featuredNr || 0) - (b.customFields?.featuredNr || 0));

    const colHomeEins = RootLoaderData.collections?.find(
        (collection: { slug: string }) => collection.slug === 'sc1-new-in',
    );
    const colHomeZwei = RootLoaderData.collections?.find(
        (collection: { slug: string }) => collection.slug === 'ca-beach',
    );
    const colHomeDrei = RootLoaderData.collections?.find(
        (collection: { slug: string }) => collection.slug === 'ca-hot-pink-ocean-berry',
    );
    const { collectionProducts } = useLoaderData<typeof loader>();
    const featuredProducts = collectionProducts?.search?.items;
    const { collectionProductsZwo } = useLoaderData<typeof loader>();
    const featuredProductsZwo = collectionProductsZwo?.search?.items;

    // const featuredAll = RootLoaderData.featuredCollectionsWithProducts;
    // const featuredCollectionEins = featuredAll.collection.find(
    //    (c) => c.customFields?.featuredNr === 1,
    // );

    return (
        <div className="" data-oid="245gf6u">
            <div className="heroBannerImageFrame" data-oid="418uqe9">
                <img src="./fthdrg.webp" className="heroBannerImage" alt="" data-oid="-i3pz2e" />
            </div>
            <div className="heroBanner" data-oid="ybswhrl">
                <div className="heroBannerOverlay" data-oid="ud1mqmo">
                    <div className="h-[40vh]"></div>
                    <div className="textBannerSubtitle" data-oid="tsyiit3">
                        Life's too short
                    </div>

                    <div className="textBannerTitle" data-oid="xoe18hh">
                        to wear boring jewelry
                    </div>

                    <CategoryLink className="my-16" categorySlug="aa-all" data-oid="einwjr0">
                        <Button className="invert" data-oid="_ns2d22">
                            Shop Collections
                        </Button>
                    </CategoryLink>
                </div>
            </div>
            <div className="textBannerSection" data-oid="hqay.qu">
                <FadeIn className="textBanner" duration={1.8} data-oid="q6k4z92">
                    <div className="textBannerSubtitle" data-oid="c:z:zej">
                        curated list of
                    </div>
                    <div className="textBannerTitle" data-oid="xq_xyhz">
                        collections
                    </div>
                    {/* <CategoryLink categorySlug="aa-aa-all" data-oid="8gzudre">
                        <LabelWithArrow data-oid="4fjs1_:">Shop Collections</LabelWithArrow>
                    </CategoryLink> */}
                </FadeIn>
            </div>
            {/* // Start neue featured Sections  */}

            <div className="mb-[-75px]">
                {featuredProductsData.map(({ collection, products }) => (
                    <div className="relative mb-[75px]" key={collection.id}>
                        <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-y-1 md:gap-1 w-full">
                            <div className="relative flex w-full bg-black aspect-[5/8]">
                                <img
                                    src={collection.featuredAsset?.source}
                                    className=" object-cover w-full opacity-90"
                                    alt=""
                                    data-oid="-i3pz2e"
                                />

                                <div className="heroBannerOverlay">
                                    <div className="w-full h-full  justify-center flex mt-8">
                                        <div
                                            className="relative  text-white text-center"
                                            data-oid="xoe18hh"
                                        >
                                            <div className="textBannerSubtitle" data-oid="c:z:zej">
                                                Collection
                                            </div>
                                            <div className="textBannerTitle">
                                                <div className="absolute w-full text-white mix-blend-soft-light">
                                                    {collection.name}
                                                </div>
                                                <div className="relative w-full text-white mix-blend-normal opacity-100">
                                                    {collection.name}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <CategoryLink
                                        className="my-2 justify-center"
                                        categorySlug={collection.slug}
                                        data-oid="einwjr0"
                                    >
                                        <Button className="invert" data-oid="_ns2d22">
                                            Shop Collection
                                        </Button>
                                    </CategoryLink>
                                    <div className="textBannerTitle" data-oid="xoe18hh"></div>
                                </div>
                            </div>

                            <div className="xl:col-span-2">
                                <Carousel
                                    opts={{
                                        align: 'start',
                                    }}
                                    className="w-full"
                                    positionArrows="side" // Add this line
                                >
                                    <CarouselContent className="-ml-[4px]">
                                        {products.map((product) => (
                                            <CarouselItem
                                                key={product.productId}
                                                className="sm:basis-1/2 md:basis-full xl:basis-1/2 pl-[4px]"
                                            >
                                                {/* <div className="p-1"> */}

                                                <ProductLink
                                                    productSlug={product.slug!}
                                                    data-oid="1dgt013"
                                                >
                                                    <ProductCard
                                                        name={product.productName!}
                                                        imageUrl={product.productAsset?.preview}
                                                        price={product.priceWithTax}
                                                        currencyCode={product.currencyCode}
                                                        //   discountedPrice={product.priceData?.formatted?.discountedPrice}
                                                        //   ribbon={product.ribbon ?? undefined}
                                                        data-oid=".69b_9o"
                                                    />
                                                </ProductLink>

                                                {/* </div> */}
                                            </CarouselItem>
                                        ))}
                                    </CarouselContent>
                                    <CarouselPrevious data-oid="0k7s.kk" />
                                    <CarouselNext data-oid="pob73h1" />
                                </Carousel>
                            </div>
                        </div>
                    </div>
                ))}
            </div>

            {/*// Ende neue featured Sections */}
            {/* }
            <div>
                <Carousel
                    opts={{
                        align: 'start',
                    }}
                    className="w-full"
                    positionArrows="side" // Add this line
                >
                    <CarouselContent className="-ml-[4px]">
                        {featuredProducts.map((product) => (
                            <CarouselItem
                                key={product.productId}
                                className="sm:basis-1/2 md:basis-1/3 xl:basis-1/4 pl-[4px]"
                            >

                                <ProductLink productSlug={product.slug!} data-oid="1dgt013">
                                    <ProductCard
                                        name={product.productName!}
                                        imageUrl={product.productAsset?.preview}
                                        price={product.priceWithTax}
                                        currencyCode={product.currencyCode}
                                        //   discountedPrice={product.priceData?.formatted?.discountedPrice}
                                        //   ribbon={product.ribbon ?? undefined}
                                        data-oid=".69b_9o"
                                    />
                                </ProductLink>

                            </CarouselItem>
                        ))}
                    </CarouselContent>
                    <CarouselPrevious data-oid="0k7s.kk" />
                    <CarouselNext data-oid="pob73h1" />
                </Carousel>
            </div>

            <div className="cardsSection" data-oid="fvh5j5t">
                <CategoryLink
                    categorySlug={colHomeEins?.slug ?? ''}
                    className="linkCard"
                    data-oid="p9mvl11"
                >
                    <img
                        className="linkCardBackground"
                        src={colHomeEins?.featuredAsset?.preview}
                        alt=""
                        data-oid="qfu:e5t"
                    />

                    <div className="linkCardTitle" data-oid="qkta38q">
                        {colHomeEins?.name}
                    </div>
                </CategoryLink>
                <CategoryLink
                    categorySlug={colHomeZwei?.slug ?? ''}
                    className="linkCard"
                    data-oid="t_wzukz"
                >
                    <img
                        className="linkCardBackground"
                        src={colHomeZwei?.featuredAsset?.preview}
                        alt=""
                        data-oid="x:zx4zg"
                    />

                    <div className="linkCardTitle" data-oid="51o.0ft">
                        {colHomeZwei?.name}
                    </div>
                </CategoryLink>
                <CategoryLink
                    categorySlug={colHomeDrei?.slug ?? ''}
                    className="linkCard"
                    data-oid="yx.d49n"
                >
                    <img
                        className="linkCardBackground"
                        src={colHomeDrei?.featuredAsset?.preview}
                        alt=""
                        data-oid="zt3f1f-"
                    />

                    <div className="linkCardTitle" data-oid="gbtqo6f">
                        {colHomeDrei?.name}
                    </div>
                </CategoryLink>
            </div>
            */}
            <FeaturedProductsSection
                featuredProducts={featuredProducts}
                className="alternateBackground"
                categorySlug="sc2-featured-items"
                title="Featured Items"
                description="Shine bright like a diamond."
                productCount={4}
                data-oid="2v2ssua"
            />
            <BackgroundParallax
                className="floatingCardBackground"
                backgroundImageUrl="./heropara.webp"
                parallaxStrength={1}
                data-oid="r6:6fdc"
            >
                <FloatIn direction="up" duration={1.2} distance={120} data-oid="792li00">
                    <div className="floatingCard" data-oid="1wfaej8">
                        <div className="floatingCardHeader" data-oid="ot7ky.y">
                            Happy Holidays
                        </div>
                        <div className="floatingCardContent" data-oid="c59ipfl">
                            <h2 className="floatingCardTitle" data-oid="tpwjw5-">
                                The holidays best sellers
                            </h2>
                            <div className="floatingCardDescription" data-oid="uprv8vb">
                                Home essentials for
                                <br data-oid="8onz70l" /> sustainable living
                            </div>
                        </div>
                        <CategoryLink categorySlug="aa-all" data-oid="6_bckur">
                            <LabelWithArrow data-oid="fo-n4o2">Buy a gift</LabelWithArrow>
                        </CategoryLink>
                    </div>
                </FloatIn>
            </BackgroundParallax>
            <FeaturedProductsSection
                featuredProducts={featuredProductsZwo}
                categorySlug="sc1-new-in"
                title="New In"
                description="Are You an explorer?"
                productCount={4}
                data-oid="933ppe_"
            />
        </div>
    );
}
export const meta: MetaFunction = () => {
    const title = 'DiscoBabes';
    const description = 'Expressive Colors and Unique Shapes for All DiscoBabes!';

    return [
        { title },
        {
            name: 'description',
            content: description,
        },
        {
            property: 'robots',
            content: 'index, follow',
        },
        {
            property: 'og:title',
            content: title,
        },
        {
            property: 'og:description',
            content: description,
        },
        {
            property: 'og:image',
            content: '/social-media-image.jpg',
        },
    ];
};
